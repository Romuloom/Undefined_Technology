// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyLoginAPI.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyLoginAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240902113847_AddAdminUserSeed")]
    partial class AddAdminUserSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyLoginAPI.Models.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("QuantidadeMinima")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Estoques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeProduto = "Lápis",
                            Quantidade = 100,
                            QuantidadeMinima = 10
                        },
                        new
                        {
                            Id = 2,
                            NomeProduto = "Caderno",
                            Quantidade = 50,
                            QuantidadeMinima = 5
                        });
                });

            modelBuilder.Entity("MyLoginAPI.Models.ListaEscolar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeEscola")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Produtos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ListasEscolares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeEscola = "Escola Primária A",
                            Produtos = "Lápis, Caderno"
                        },
                        new
                        {
                            Id = 2,
                            NomeEscola = "Escola Secundária B",
                            Produtos = "Borracha, Régua"
                        });
                });

            modelBuilder.Entity("MyLoginAPI.Models.Metrica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("TotalNovosClientes")
                        .HasColumnType("integer");

                    b.Property<int>("TotalPedidosParaEntrega")
                        .HasColumnType("integer");

                    b.Property<int>("TotalProdutosCadastrados")
                        .HasColumnType("integer");

                    b.Property<int>("TotalProdutosEmEstoqueMinimo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Metricas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TotalNovosClientes = 5,
                            TotalPedidosParaEntrega = 10,
                            TotalProdutosCadastrados = 150,
                            TotalProdutosEmEstoqueMinimo = 2
                        });
                });

            modelBuilder.Entity("MyLoginAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "AQAAAAIAAYagAAAAENlynyAn7Nhh4VmQPBnKi1my+Ezmu3aUYIa2N/AWjliskmeN7bAmLqHollZLs6fylg==",
                            Username = "admin@example.com"
                        });
                });

            modelBuilder.Entity("Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2024, 9, 2, 11, 38, 47, 48, DateTimeKind.Utc).AddTicks(2840),
                            FormaPagamento = "Dinheiro",
                            Status = "Entregue",
                            Valor = 200.00m
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2024, 9, 2, 11, 38, 47, 48, DateTimeKind.Utc).AddTicks(2845),
                            FormaPagamento = "Cartão de Crédito",
                            Status = "Em preparação",
                            Valor = 150.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
